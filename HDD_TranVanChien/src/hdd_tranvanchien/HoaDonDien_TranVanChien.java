/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hdd_tranvanchien;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.sql.*;

/**
 *
 * @author Peggy
 */
public class HoaDonDien_TranVanChien extends javax.swing.JFrame {

    /**
     * Creates new form HoaDonDien_TranVanChien
     */
    public HoaDonDien_TranVanChien() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSoKW = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnShow = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("HÓA ĐƠN ĐIỆN - KHÁCH HÀNG TRẦN VĂN CHIẾN");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Mã Hóa Đơn: ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Ngày Lập Hóa Đơn: ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Số KW Tiêu Thụ:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Đơn Giá:");

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnShow.setText("Lấy dữ liệu");
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        btnDel.setText("Xóa");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnSearch.setText("Tìm kiếm");

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Ngày Lập Hóa Đơn", "Số KW Tiêu Thụ", "Đơn Giá", "Tổng Tiền"
            }
        ));
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtDonGia)
                                            .addComponent(txtSoKW)
                                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jLabel4))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEdit))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnShow)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDel))
                            .addComponent(btnSearch))))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShow)
                    .addComponent(btnDel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSoKW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearch)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        try {
            // ket noi toi csdl
            Connection ketnoi = Ketnoi.KetnoiSQL();
            // ham PreparedStatement la prepareStatement tham chieu Ketnoi voi Query 
            String sql1 = "SELECT * FROM tt_hoadon";

//            PreparedStatement stmt = ketnoi.prepareStatement(sql1);
            Statement stm = ketnoi.createStatement();
            // thuc thi 
            ResultSet rs = stm.executeQuery(sql1); // ResultSet là lấy các data đổ vào rs 
            DefaultTableModel dtm = (DefaultTableModel) tbl.getModel();
            // DTM có tác dụng trung gian đổ dữ liệu rs vào tblSinhVien
            dtm.setRowCount(0); // giống câu lệnh Clear
            // rs.next() -> nếu còn bản ghi tiếp theo thì sẽ đọc tiếp
            while (rs.next()) {
                // Đọc rs đưa lên bảng tblSinhVien 
                Object objList[] = {
                    rs.getString(1), // cột 1 hoặc rs.getString("MaSV")
                    rs.getDate(2),
                    rs.getInt(3),
                    rs.getInt(4),
                    rs.getInt(5)
                };
                // Đưa lên DTM
                dtm.addRow(objList);
                tbl.setModel(dtm);
            }
        } catch (SQLException ex) {
            Logger.getLogger(HoaDonDien_TranVanChien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnShowActionPerformed
    // nut them
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            // kết nối
            Connection ketnoi = Ketnoi.KetnoiSQL();
            String ma = txtMa.getText();
            String ngaylap = txtDate.getText();
            String sokw = txtSoKW.getText();
            String dongia = txtDonGia.getText();
//            String sql2 = "INSERT INTO tt_hoadon(ma, ngaylap, sokw, dongia, tongtien) "
//                    + "VALUES ('" + ma + "', '" + ngaylap + "', '" + sokw + "', "
//                    + "'" + dongia + "', '" + (Integer.parseInt(sokw) * Integer.parseInt(dongia)) + "')";
            try {
                String sql2 = "INSERT INTO tt_hoadon(ma, ngaylap, sokw, dongia, tongtien) "
                        + "VALUES ('" + ma + "', STR_TO_DATE('" + ngaylap + "', '%d-%m-%Y'), '" + sokw + "', "
                        + "'" + dongia + "', '" + (Integer.parseInt(sokw) * Integer.parseInt(dongia)) + "')";

                Statement stm = ketnoi.createStatement();
                stm.executeUpdate(sql2); // SELECT thì executeQuery
                // còn INSERT, UPDATE thì dùng executeUpdate

                DefaultTableModel dtm = (DefaultTableModel) tbl.getModel();
                dtm.setRowCount(0);
                String sql1 = "SELECT * FROM tt_hoadon";
                ResultSet rs = stm.executeQuery(sql1);
                while (rs.next()) {
                    // Đọc rs đưa lên bảng tblSinhVien 
                    Object objList[] = {
                        rs.getString(1),
                        rs.getDate(2),
                        rs.getInt(3),
                        rs.getInt(4),
                        rs.getInt(5)
                    };
                    // Đưa lên DTM
                    dtm.addRow(objList);
                    tbl.setModel(dtm);
                }

            } catch (Exception ex) {
                System.out.println("Ex: " + ex.getMessage());
            }
        } catch (SQLException ex) {
            Logger.getLogger(HoaDonDien_TranVanChien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed
    // nut sua
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        try {
            // kết nối
            Connection ketnoi = Ketnoi.KetnoiSQL();
            String ma = txtMa.getText();
            String ngaylap = txtDate.getText();
            String sokw = txtSoKW.getText();
            String dongia = txtDonGia.getText();
            String sql2 = "UPDATE tt_hoadon SET ngaylap = STR_TO_DATE('" + ngaylap + "', '%d-%m-%Y'), "
                    + "sokw = '" + sokw + "', dongia = '" + dongia + "', "
                    + "tongtien = '" + (Integer.parseInt(sokw) * Integer.parseInt(dongia)) + "' "
                    + "WHERE ma = '" + ma + "'";
            Statement stm = ketnoi.createStatement();
            stm.executeUpdate(sql2); // SELECT thì executeQuery
            // còn INSERT, UPDATE thì dùng executeUpdate

            DefaultTableModel dtm = (DefaultTableModel) tbl.getModel();
            dtm.setRowCount(0);
            String sql1 = "SELECT * FROM tt_hoadon";
            ResultSet rs = stm.executeQuery(sql1);

            while (rs.next()) {
                // Đọc rs đưa lên bảng tblSinhVien 
                Object objList[] = {
                    rs.getString(1), // cột 1 hoặc rs.getString("MaSV")
                    rs.getDate(2),
                    rs.getInt(3),
                    rs.getInt(4),
                    rs.getInt(5)
                };
                // Đưa lên DTM
                dtm.addRow(objList);
                tbl.setModel(dtm);
            }
        } catch (SQLException ex) {
            Logger.getLogger(HoaDonDien_TranVanChien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        // B1: lấy dòng cần chọn 
        int row = tbl.getSelectedRow();
        // B2: lấy dữ liệu của từng cột ( hoặc trường ) 
        String ma = tbl.getValueAt(row, 0).toString();
        String ngay = tbl.getValueAt(row, 1).toString();
        String sokw = tbl.getValueAt(row, 2).toString();
        String dongia = tbl.getValueAt(row, 3).toString();

        // B3: Đưa dữ liệu lên các ô TextField
        txtMa.setText(ma); // set dùng để update data
        txtDate.setText(ngay);
        txtSoKW.setText(sokw);
        txtDonGia.setText(dongia);
    }//GEN-LAST:event_tblMouseClicked

    // code nut xoa
    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        try {
            Connection kn = Ketnoi.KetnoiSQL();
            String ma = txtMa.getText();
            String queryDelete = "DELETE FROM tt_hoadon WHERE ma = '" + ma + "'";
            Statement stm = kn.createStatement();
            stm.executeUpdate(queryDelete); // SELECT thì executeQuery
            // còn INSERT, UPDATE thì dùng executeUpdate

            // hiển thị ra bảng
            String sql1 = "SELECT * FROM tt_hoadon";
            // thực thi truy vấn câu lệnh SQL
            ResultSet rs = stm.executeQuery(sql1);
            DefaultTableModel dtm = (DefaultTableModel) tbl.getModel();
//            dtm.setRowCount(0);
            try {
                int row = tbl.getSelectedRow();
                dtm.removeRow(row);
            } catch (Exception ex) {
                System.out.println("ex: " + ex.getMessage());
            }
        } catch (SQLException ex) {
            Logger.getLogger(HoaDonDien_TranVanChien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDonDien_TranVanChien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDonDien_TranVanChien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDonDien_TranVanChien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDonDien_TranVanChien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDonDien_TranVanChien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnShow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtSoKW;
    // End of variables declaration//GEN-END:variables
}
